// <auto-generated/>

#nullable enable
#pragma warning disable

using System;
using System.Runtime.CompilerServices;
using HotChocolate;
using HotChocolate.Types;
using HotChocolate.Execution.Configuration;

namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class DndMeetingAPITypesRequestExecutorBuilderExtensions
    {
        public static IRequestExecutorBuilder AddDndMeetingAPITypes(this IRequestExecutorBuilder builder)
        {
            builder.AddDataLoader<global::DndMeetingAPI.DataLoaders.DaysWithFreeTimeAndFreeTimeDataLoader>();
            builder.AddDataLoader<global::DndMeetingAPI.DataLoaders.DaysWithFreeTimeAndUsersDataLoader>();
            builder.AddDataLoader<global::DndMeetingAPI.DataLoaders.DayWithFreeTimeDataLoader>();
            builder.AddDataLoader<global::DndMeetingAPI.DataLoaders.FreeTimeDataLoader>();
            builder.AddDataLoader<global::DndMeetingAPI.DataLoaders.FreeTimesByUsersIdsDataLoader>();
            builder.AddDataLoader<global::DndMeetingAPI.DataLoaders.UserDataLoader>();
            builder.AddDataLoader<global::DndMeetingAPI.DataLoaders.UsersAndDaysWithFreeTimeDataLoader>();
            builder.AddType<global::DndMeetingAPI.Types.CopyFreeTimesInputObject>();
            builder.AddType<global::DndMeetingAPI.Types.DayWithFreeTimeObject>();
            builder.AddType<global::DndMeetingAPI.Types.FreeDayWithTimesInputObject>();
            builder.AddType<global::DndMeetingAPI.Types.FreeTimeInputObject>();
            builder.AddType<global::DndMeetingAPI.Types.FreeTimeObject>();
            builder.AddType<global::DndMeetingAPI.Types.MutationObject>();
            builder.AddType<global::DndMeetingAPI.Types.QueryObject>();
            builder.AddType<global::DndMeetingAPI.Types.UserObject>();
            return builder;
        }
    }
}
